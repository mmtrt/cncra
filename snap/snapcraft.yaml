name: cncra
version: '1.0'
summary: C&C Red Alert is a real-time strategy game.
description: |
 Command & Conquer: Red Alert is a real-time strategy game and second release in the Command & Conquer series, having been released in October of 1996. it is also the first game in the Red Alert sub-series that takes an alternative path/story of the main Command & Conquer series.

 C&C: Red Alert is set prior to the events in Command & Conquer in an alternative history where the Soviet Union has invaded Eastern Europe and started a new war against the remaining European countries and the United States.

 When the game was released in 1996 it was praised by fans and critics alike for its intuitive user interface and gameplay that was ahead of its time. New, groundbreaking features introduced with the release of Command & Conquer Red Alert included the ability to queue commands, create and assign multiple units into a single group by a simple drag and select, as well as multiple factions with different strengths and weaknesses. These features have since become standard for the genre.

grade: stable
confinement: strict
architectures:
  - build-on: amd64
    run-on: [amd64, i386]

apps:
  cncra:
    command: |
      bin/sommelier "$(find $WINEPREFIX/ -type f \( -name 'RA1MPLauncher.exe' -o -name 'RA95Launcher.exe' \) 2>/dev/null)"
    environment:
      WINEPREFIX: "$SNAP_USER_COMMON/.wine"
      DLLOVERRIDES: "mshtml=" # Prevent pop-ups about Wine Gecko
      INSTALL_URL_RA: "https://downloads.cncnet.org/RA1installer.exe" # cncra full game setup
      INSTALL_URL_CNC: "https://downloads.cncnet.org/RedAlert1_Online_Installer.exe" # cncra multiplayer only setup
      MONO_URL: "https://dl.winehq.org/wine/wine-mono/4.7.3/wine-mono-4.7.3.msi"
      TRICKS: "dotnet20"
      VIRTDESKTOP: 0
      LC_ALL: "C.UTF-8"
    plugs:
      - desktop
      - desktop-legacy
      - hardware-observe
      - home
      - joystick
      - network
      - network-bind
      - opengl
      - process-control
      - pulseaudio
      - wayland
      - x11
  wineboot:
    command: bin/sommelier $SNAP/bin/wineboot
    environment:
      WINEPREFIX: "$SNAP_USER_COMMON/.wine"
      DLLOVERRIDES: "mshtml=" # Prevent pop-ups about Wine Gecko
    plugs:
      - desktop
      - desktop-legacy
      - pulseaudio
      - wayland
      - x11
  winecfg:
    command: bin/sommelier $SNAP/bin/winecfg
    environment:
      WINEPREFIX: "$SNAP_USER_COMMON/.wine"
      DLLOVERRIDES: "mshtml=" # Prevent pop-ups about Wine Gecko
    plugs:
      - desktop
      - desktop-legacy
      - pulseaudio
      - wayland
      - x11
  winetricks:
    command: bin/sommelier $SNAP/bin/winetricks prefix="$WINEPREFIX"
    environment:
      WINEPREFIX: "$SNAP_USER_COMMON/.wine"
      DLLOVERRIDES: "mshtml=" # Prevent pop-ups about Wine Gecko
      LC_ALL: "C.UTF-8"
    plugs:
      - desktop
      - desktop-legacy
      - network
      - pulseaudio
      - wayland
      - x11

parts:
  enable-i386:
    plugin: nil
    build-attributes:
      - no-system-libraries
    build-packages:
      # This snap is build on amd64 only
      - on amd64:
        - apt
        - dpkg
      - else fail
    override-build: |
      snapcraftctl build
      dpkg --add-architecture i386
      apt update

  wine:
    plugin: nil
    build-attributes:
      - no-system-libraries
    build-packages:
      - dpkg
      - wget
    override-build: |
      snapcraftctl build

      WINE_REL="wine-devel"
      WINE_ARCH="i386"
      WINE_VER="3.13.0"

      # wget and dpkg extract the wine debs
      DEB_URLS="https://dl.winehq.org/wine-builds/ubuntu/pool/main/${WINE_REL}-${WINE_ARCH}_${WINE_VER}~xenial_${WINE_ARCH}.deb \
                https://dl.winehq.org/wine-builds/ubuntu/pool/main/${WINE_REL}_${WINE_VER}~xenial_${WINE_ARCH}.deb"

      for DEB_URL in ${DEB_URLS}; do
        DEB=$(basename "${DEB_URL}")
        echo "Downloading ${DEB_URL}..."
        wget --quiet "${DEB_URL}" -O "${SNAPCRAFT_PART_INSTALL}/${DEB}"
        echo "Unpacking ${DEB}..."
        dpkg -x "${SNAPCRAFT_PART_INSTALL}/${DEB}" ${SNAPCRAFT_PART_INSTALL}
        rm -f "${SNAPCRAFT_PART_INSTALL}/${DEB}"
      done

      # Organise
      cp -a ${SNAPCRAFT_PART_INSTALL}/opt/${WINE_REL}/* ${SNAPCRAFT_PART_INSTALL}/

      # Cleanup
      rm -rf ${SNAPCRAFT_PART_INSTALL}/opt
      rm -rf ${SNAPCRAFT_PART_INSTALL}/share/applications
      rm -rf ${SNAPCRAFT_PART_INSTALL}/share/man
      rm -rf ${SNAPCRAFT_PART_INSTALL}/usr/share/doc
      rm -rf ${SNAPCRAFT_PART_INSTALL}/usr/share/lintian
    after:
      - enable-i386

  wine-runtime:
    plugin: nil
    build-attributes:
      - no-system-libraries
    stage-packages:
      ### Depends from wine-devel-i386_x.y.z~xenial_i386.deb debian/control
      - libasound2:i386
      - libc6:i386
      - libglib2.0-0:i386
      #- libgphoto2-6:i386
      - libgstreamer-plugins-base1.0-0:i386
      - liblcms2-2:i386
      - libldap-2.4-2:i386
      - libmpg123-0:i386
      - libncurses5:i386
      - libopenal1:i386
      - libpcap0.8:i386
      - libpulse0:i386
      - libudev1:i386
      - libxext6:i386
      - libxml2:i386
      - zlib1g:i386
      ### Recommends from wine-devel-i386_x.y.z~xenial_i386.deb debian/control
      #- libcapi20-3:i386
      #- libcups2:i386
      - libdbus-1-3:i386
      - libfontconfig1:i386
      - libfreetype6:i386
      - libglu1-mesa:i386
      - libgnutls30:i386
      - libgsm1:i386
      - libgssapi-krb5-2:i386
      - libjpeg8:i386
      #- libodbc1:i386
      - libosmesa6:i386
      - libpng12-0:i386
      #- libsane:i386
      - libsdl2-2.0-0:i386
      - libtiff5:i386
      - libv4l-0:i386
      - libvulkan1:i386
      - libxcomposite1:i386
      - libxcursor1:i386
      - libxfixes3:i386
      - libxi6:i386
      - libxinerama1:i386
      - libxrandr2:i386
      - libxrender1:i386
      - libxslt1.1:i386
      - libxxf86vm1:i386
      # Required for authentication - Observed in Steam and Track Mania
      - winbind:i386
      - samba-libs:i386
    override-build: |
      snapcraftctl build
      rm -rf $SNAPCRAFT_PART_INSTALL/etc/init
      rm -rf $SNAPCRAFT_PART_INSTALL/etc/init.d
      rm -rf $SNAPCRAFT_PART_INSTALL/etc/logrotate.d
      rm -rf $SNAPCRAFT_PART_INSTALL/lib/x86_64-linux-gnu
      rm -rf $SNAPCRAFT_PART_INSTALL/usr/lib/x86_64-linux-gnu
      rm -rf $SNAPCRAFT_PART_INSTALL/usr/share/apps
      rm -rf $SNAPCRAFT_PART_INSTALL/usr/share/applications
      rm -rf $SNAPCRAFT_PART_INSTALL/usr/share/bug
      rm -rf $SNAPCRAFT_PART_INSTALL/usr/share/doc
      rm -rf $SNAPCRAFT_PART_INSTALL/usr/share/doc-base
      rm -rf $SNAPCRAFT_PART_INSTALL/usr/share/debhelper
      rm -rf $SNAPCRAFT_PART_INSTALL/usr/share/lintian
      rm -rf $SNAPCRAFT_PART_INSTALL/usr/share/man
      rm -rf $SNAPCRAFT_PART_INSTALL/usr/share/pixmaps
      rm -rf $SNAPCRAFT_PART_INSTALL/usr/share/pkgconfig
    after:
      - enable-i386

  cncra:
    plugin: dump
    build-attributes:
      - no-system-libraries
    source: snap/scripts
    organize:
      'sommelier': bin/
      'winetricks': bin/
      'zenity': bin/
    stage-packages:
      - cabextract:i386         # winetricks
      - libgdk-pixbuf2.0-0:i386 # yad
      - libgtk-3-0:i386         # yad
      - libnotify4:i386         # yad
      - libnotify-bin:i386      # sommelier
      - perl-base:i386          # winetricks
      - shared-mime-info:i386
      - unzip:i386              # winetricks
      - wget:i386               # winetricks
      - x11-xserver-utils:i386  # sommelier
      - yad:i386                # winetricks
    override-build: |
      snapcraftctl build
      rm -rf $SNAPCRAFT_PART_INSTALL/etc/init
      rm -rf $SNAPCRAFT_PART_INSTALL/etc/init.d
      rm -rf $SNAPCRAFT_PART_INSTALL/etc/logrotate.d
      rm -rf $SNAPCRAFT_PART_INSTALL/usr/bin/fc-*
      rm -rf $SNAPCRAFT_PART_INSTALL/usr/bin/gtk-*
      rm -rf $SNAPCRAFT_PART_INSTALL/usr/lib/dconf/dconf-service
      rm -rf $SNAPCRAFT_PART_INSTALL/usr/lib/glib-networking/glib-pacrunner
      rm -rf $SNAPCRAFT_PART_INSTALL/usr/share/GConf
      rm -rf $SNAPCRAFT_PART_INSTALL/usr/share/aclocal
      rm -rf $SNAPCRAFT_PART_INSTALL/usr/share/apport
      rm -rf $SNAPCRAFT_PART_INSTALL/usr/share/apps
      rm -rf $SNAPCRAFT_PART_INSTALL/usr/share/bash-completion
      rm -rf $SNAPCRAFT_PART_INSTALL/usr/share/bug
      rm -rf $SNAPCRAFT_PART_INSTALL/usr/share/debhelper
      rm -rf $SNAPCRAFT_PART_INSTALL/usr/share/doc
      rm -rf $SNAPCRAFT_PART_INSTALL/usr/share/doc-base
      rm -rf $SNAPCRAFT_PART_INSTALL/usr/share/icons/Adwaita
      rm -rf $SNAPCRAFT_PART_INSTALL/usr/share/icons/Humanity*
      rm -rf $SNAPCRAFT_PART_INSTALL/usr/share/icons/LoginIcons
      rm -rf $SNAPCRAFT_PART_INSTALL/usr/share/icons/ubuntu-mono*
      rm -rf $SNAPCRAFT_PART_INSTALL/usr/share/info
      rm -rf $SNAPCRAFT_PART_INSTALL/usr/share/kde4
      rm -rf $SNAPCRAFT_PART_INSTALL/usr/share/lintian
      rm -rf $SNAPCRAFT_PART_INSTALL/usr/share/menu
      rm -rf $SNAPCRAFT_PART_INSTALL/usr/share/man
      rm -rf $SNAPCRAFT_PART_INSTALL/usr/share/perl5
      rm -rf $SNAPCRAFT_PART_INSTALL/usr/share/pixmaps
      rm -rf $SNAPCRAFT_PART_INSTALL/usr/share/pkgconfig
      rm -rf $SNAPCRAFT_PART_INSTALL/lib/x86_64-linux-gnu
      rm -rf $SNAPCRAFT_PART_INSTALL/usr/lib/x86_64-linux-gnu
    after:
      - enable-i386
